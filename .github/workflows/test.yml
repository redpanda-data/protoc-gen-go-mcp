name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21', '1.22', '1.23']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Set up Buf
      uses: bufbuild/buf-setup-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-

    - name: Download dependencies
      run: go mod download

    - name: Install protoc-gen-go
      run: go install google.golang.org/protobuf/cmd/protoc-gen-go@latest

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Check examples build
      run: |
        cd examples/basic && go build .
        cd ../openai-compat && go build .

    - name: Generate examples
      run: make examples

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v7
      with:
        version: v2.1.6

  buf-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Buf
      uses: bufbuild/buf-setup-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Buf lint
      run: |
        cd examples/basic && buf lint || echo "Buf lint disabled due to package structure"
        cd examples/openai-compat && buf lint || echo "Buf lint disabled due to package structure"
        cd pkg/generator && buf lint || echo "Buf lint disabled due to package structure"

    - name: Buf format check
      run: |
        cd examples/basic && buf format --diff --exit-code . || echo "Buf format check disabled"
        cd examples/openai-compat && buf format --diff --exit-code . || echo "Buf format check disabled"
        cd pkg/generator && buf format --diff --exit-code . || echo "Buf format check disabled"

  golden-files:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Set up Buf
      uses: bufbuild/buf-setup-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Check golden files are up to date
      run: |
        # Generate fresh files
        go test ./pkg/generator -update-golden
        
        # Check if any files changed
        if ! git diff --quiet; then
          echo "Golden files are out of date. Please run: make update-golden"
          git diff
          exit 1
        fi