// Copyright 2025 Redpanda Data, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package example.v1;

message CreateExampleRequest {
  int32 some_int32 = 1;
  int64 some_int64 = 2;
  string some_string = 3;
  enum SomeEnum {
    SOME_ENUM_UNSPECIFIED = 0;
    SOME_ENUM_FIRST = 1;
    SOME_ENUM_SECOND = 2;
  }
  SomeEnum some_enum = 4;
  message Nested {
    string some_field = 1;
    message Nested2 {
      string some_nested_field = 1;
      message Nested3 {
        string some_nested_in_nested_field = 1;
        optional string optional_string = 2;
      }
      Nested3 nested3 = 2;
    }
    Nested2 nested2 = 2;
  }

  Nested nested = 5;
  optional string optional_string = 6;
  repeated string repeated_string = 7;
  map<string, Nested> map_with_nested_val = 8;
  map<int32, Nested> map_with_nested_val_no_string_key = 9;
  oneof some_oneof {
    string first_item = 10;
    int32 second_item = 11;
  }
}

message CreateExampleResponse {
  string some_string = 1;
}

service ExampleService {

  // @ignore-comment Ignore these linter rules, because we intentionally return a generic Operation message for all long-running operations.
  // buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  // CreateCluster create a Redpanda cluster. The input contains the spec, that describes the cluster.
  // A Operation is returned. This task allows the caller to find out when the long-running operation of creating a cluster has finished.
  rpc CreateExample(CreateExampleRequest) returns (CreateExampleResponse);
}
