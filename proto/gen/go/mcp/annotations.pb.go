// Copyright 2025 Redpanda Data, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: mcp/annotations.proto

package mcp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var file_mcp_annotations_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50001,
		Name:          "mcp.mcp_tool_name",
		Tag:           "bytes,50001,opt,name=mcp_tool_name",
		Filename:      "mcp/annotations.proto",
	},
}

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional string mcp_tool_name = 50001;
	E_McpToolName = &file_mcp_annotations_proto_extTypes[0]
)

var File_mcp_annotations_proto protoreflect.FileDescriptor

const file_mcp_annotations_proto_rawDesc = "" +
	"\n" +
	"\x15mcp/annotations.proto\x12\x03mcp\x1a google/protobuf/descriptor.proto:D\n" +
	"\rmcp_tool_name\x12\x1e.google.protobuf.MethodOptions\x18Ñ†\x03 \x01(\tR\vmcpToolNameB\x84\x01\n" +
	"\acom.mcpB\x10AnnotationsProtoP\x01Z;github.com/redpanda-data/protoc-gen-go-mcp/proto/gen/go/mcp\xa2\x02\x03MXX\xaa\x02\x03Mcp\xca\x02\x03Mcp\xe2\x02\x0fMcp\\GPBMetadata\xea\x02\x03Mcpb\x06proto3"

var file_mcp_annotations_proto_goTypes = []any{
	(*descriptorpb.MethodOptions)(nil), // 0: google.protobuf.MethodOptions
}
var file_mcp_annotations_proto_depIdxs = []int32{
	0, // 0: mcp.mcp_tool_name:extendee -> google.protobuf.MethodOptions
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	0, // [0:1] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_mcp_annotations_proto_init() }
func file_mcp_annotations_proto_init() {
	if File_mcp_annotations_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mcp_annotations_proto_rawDesc), len(file_mcp_annotations_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_mcp_annotations_proto_goTypes,
		DependencyIndexes: file_mcp_annotations_proto_depIdxs,
		ExtensionInfos:    file_mcp_annotations_proto_extTypes,
	}.Build()
	File_mcp_annotations_proto = out.File
	file_mcp_annotations_proto_goTypes = nil
	file_mcp_annotations_proto_depIdxs = nil
}
